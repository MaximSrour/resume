// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model App {
  id           String  @id @default(cuid())
  title        String
  link         String
  hidden       Boolean @default(false)
}

model WorkExperience {
  id           String     @id @default(cuid())
  organisation String
  imageName    String
  positions    Position[]
  order        Int        @default(0)
  hidden       Boolean    @default(false)
}

model Position {
  id               String          @id @default(cuid())
  title            String
  grouping         String
  start            DateTime
  end              DateTime?        
  //skills       String[]
  text             PositionText[]
  hidden           Boolean         @default(false)
  WorkExperience   WorkExperience? @relation(fields: [workExperienceId], references: [id])
  workExperienceId String?
}

model PositionText {
  id               String          @id @default(cuid())
  order            Int             @default(0)
  text             String          @db.VarChar(512)
  position         Position?       @relation(fields: [positionId], references: [id])
  positionId       String?
}

model Education {
  id           String  @id @default(cuid())
  title        String
  organisation String
  imageName    String
  start        String
  end          String  @default("")
  text         String
  hidden       Boolean @default(false)
}

model AdditionalActivities {
  id           String  @id @default(cuid())
  title        String
  organisation String
  start        DateTime
  end          DateTime?
  text         String @db.VarChar(512)
  hidden       Boolean @default(false)
}

model Certification {
  id           String  @id @default(cuid())
  title        String
  organisation String
  imageName    String
  start        DateTime
  end          DateTime?
  hidden       Boolean @default(false)
}